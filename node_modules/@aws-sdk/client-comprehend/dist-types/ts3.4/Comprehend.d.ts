import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import { BatchDetectDominantLanguageCommandInput, BatchDetectDominantLanguageCommandOutput } from "./commands/BatchDetectDominantLanguageCommand";
import { BatchDetectEntitiesCommandInput, BatchDetectEntitiesCommandOutput } from "./commands/BatchDetectEntitiesCommand";
import { BatchDetectKeyPhrasesCommandInput, BatchDetectKeyPhrasesCommandOutput } from "./commands/BatchDetectKeyPhrasesCommand";
import { BatchDetectSentimentCommandInput, BatchDetectSentimentCommandOutput } from "./commands/BatchDetectSentimentCommand";
import { BatchDetectSyntaxCommandInput, BatchDetectSyntaxCommandOutput } from "./commands/BatchDetectSyntaxCommand";
import { ClassifyDocumentCommandInput, ClassifyDocumentCommandOutput } from "./commands/ClassifyDocumentCommand";
import { ContainsPiiEntitiesCommandInput, ContainsPiiEntitiesCommandOutput } from "./commands/ContainsPiiEntitiesCommand";
import { CreateDocumentClassifierCommandInput, CreateDocumentClassifierCommandOutput } from "./commands/CreateDocumentClassifierCommand";
import { CreateEndpointCommandInput, CreateEndpointCommandOutput } from "./commands/CreateEndpointCommand";
import { CreateEntityRecognizerCommandInput, CreateEntityRecognizerCommandOutput } from "./commands/CreateEntityRecognizerCommand";
import { DeleteDocumentClassifierCommandInput, DeleteDocumentClassifierCommandOutput } from "./commands/DeleteDocumentClassifierCommand";
import { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from "./commands/DeleteEndpointCommand";
import { DeleteEntityRecognizerCommandInput, DeleteEntityRecognizerCommandOutput } from "./commands/DeleteEntityRecognizerCommand";
import { DescribeDocumentClassificationJobCommandInput, DescribeDocumentClassificationJobCommandOutput } from "./commands/DescribeDocumentClassificationJobCommand";
import { DescribeDocumentClassifierCommandInput, DescribeDocumentClassifierCommandOutput } from "./commands/DescribeDocumentClassifierCommand";
import { DescribeDominantLanguageDetectionJobCommandInput, DescribeDominantLanguageDetectionJobCommandOutput } from "./commands/DescribeDominantLanguageDetectionJobCommand";
import { DescribeEndpointCommandInput, DescribeEndpointCommandOutput } from "./commands/DescribeEndpointCommand";
import { DescribeEntitiesDetectionJobCommandInput, DescribeEntitiesDetectionJobCommandOutput } from "./commands/DescribeEntitiesDetectionJobCommand";
import { DescribeEntityRecognizerCommandInput, DescribeEntityRecognizerCommandOutput } from "./commands/DescribeEntityRecognizerCommand";
import { DescribeEventsDetectionJobCommandInput, DescribeEventsDetectionJobCommandOutput } from "./commands/DescribeEventsDetectionJobCommand";
import { DescribeKeyPhrasesDetectionJobCommandInput, DescribeKeyPhrasesDetectionJobCommandOutput } from "./commands/DescribeKeyPhrasesDetectionJobCommand";
import { DescribePiiEntitiesDetectionJobCommandInput, DescribePiiEntitiesDetectionJobCommandOutput } from "./commands/DescribePiiEntitiesDetectionJobCommand";
import { DescribeSentimentDetectionJobCommandInput, DescribeSentimentDetectionJobCommandOutput } from "./commands/DescribeSentimentDetectionJobCommand";
import { DescribeTopicsDetectionJobCommandInput, DescribeTopicsDetectionJobCommandOutput } from "./commands/DescribeTopicsDetectionJobCommand";
import { DetectDominantLanguageCommandInput, DetectDominantLanguageCommandOutput } from "./commands/DetectDominantLanguageCommand";
import { DetectEntitiesCommandInput, DetectEntitiesCommandOutput } from "./commands/DetectEntitiesCommand";
import { DetectKeyPhrasesCommandInput, DetectKeyPhrasesCommandOutput } from "./commands/DetectKeyPhrasesCommand";
import { DetectPiiEntitiesCommandInput, DetectPiiEntitiesCommandOutput } from "./commands/DetectPiiEntitiesCommand";
import { DetectSentimentCommandInput, DetectSentimentCommandOutput } from "./commands/DetectSentimentCommand";
import { DetectSyntaxCommandInput, DetectSyntaxCommandOutput } from "./commands/DetectSyntaxCommand";
import { ListDocumentClassificationJobsCommandInput, ListDocumentClassificationJobsCommandOutput } from "./commands/ListDocumentClassificationJobsCommand";
import { ListDocumentClassifiersCommandInput, ListDocumentClassifiersCommandOutput } from "./commands/ListDocumentClassifiersCommand";
import { ListDocumentClassifierSummariesCommandInput, ListDocumentClassifierSummariesCommandOutput } from "./commands/ListDocumentClassifierSummariesCommand";
import { ListDominantLanguageDetectionJobsCommandInput, ListDominantLanguageDetectionJobsCommandOutput } from "./commands/ListDominantLanguageDetectionJobsCommand";
import { ListEndpointsCommandInput, ListEndpointsCommandOutput } from "./commands/ListEndpointsCommand";
import { ListEntitiesDetectionJobsCommandInput, ListEntitiesDetectionJobsCommandOutput } from "./commands/ListEntitiesDetectionJobsCommand";
import { ListEntityRecognizersCommandInput, ListEntityRecognizersCommandOutput } from "./commands/ListEntityRecognizersCommand";
import { ListEntityRecognizerSummariesCommandInput, ListEntityRecognizerSummariesCommandOutput } from "./commands/ListEntityRecognizerSummariesCommand";
import { ListEventsDetectionJobsCommandInput, ListEventsDetectionJobsCommandOutput } from "./commands/ListEventsDetectionJobsCommand";
import { ListKeyPhrasesDetectionJobsCommandInput, ListKeyPhrasesDetectionJobsCommandOutput } from "./commands/ListKeyPhrasesDetectionJobsCommand";
import { ListPiiEntitiesDetectionJobsCommandInput, ListPiiEntitiesDetectionJobsCommandOutput } from "./commands/ListPiiEntitiesDetectionJobsCommand";
import { ListSentimentDetectionJobsCommandInput, ListSentimentDetectionJobsCommandOutput } from "./commands/ListSentimentDetectionJobsCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListTopicsDetectionJobsCommandInput, ListTopicsDetectionJobsCommandOutput } from "./commands/ListTopicsDetectionJobsCommand";
import { StartDocumentClassificationJobCommandInput, StartDocumentClassificationJobCommandOutput } from "./commands/StartDocumentClassificationJobCommand";
import { StartDominantLanguageDetectionJobCommandInput, StartDominantLanguageDetectionJobCommandOutput } from "./commands/StartDominantLanguageDetectionJobCommand";
import { StartEntitiesDetectionJobCommandInput, StartEntitiesDetectionJobCommandOutput } from "./commands/StartEntitiesDetectionJobCommand";
import { StartEventsDetectionJobCommandInput, StartEventsDetectionJobCommandOutput } from "./commands/StartEventsDetectionJobCommand";
import { StartKeyPhrasesDetectionJobCommandInput, StartKeyPhrasesDetectionJobCommandOutput } from "./commands/StartKeyPhrasesDetectionJobCommand";
import { StartPiiEntitiesDetectionJobCommandInput, StartPiiEntitiesDetectionJobCommandOutput } from "./commands/StartPiiEntitiesDetectionJobCommand";
import { StartSentimentDetectionJobCommandInput, StartSentimentDetectionJobCommandOutput } from "./commands/StartSentimentDetectionJobCommand";
import { StartTopicsDetectionJobCommandInput, StartTopicsDetectionJobCommandOutput } from "./commands/StartTopicsDetectionJobCommand";
import { StopDominantLanguageDetectionJobCommandInput, StopDominantLanguageDetectionJobCommandOutput } from "./commands/StopDominantLanguageDetectionJobCommand";
import { StopEntitiesDetectionJobCommandInput, StopEntitiesDetectionJobCommandOutput } from "./commands/StopEntitiesDetectionJobCommand";
import { StopEventsDetectionJobCommandInput, StopEventsDetectionJobCommandOutput } from "./commands/StopEventsDetectionJobCommand";
import { StopKeyPhrasesDetectionJobCommandInput, StopKeyPhrasesDetectionJobCommandOutput } from "./commands/StopKeyPhrasesDetectionJobCommand";
import { StopPiiEntitiesDetectionJobCommandInput, StopPiiEntitiesDetectionJobCommandOutput } from "./commands/StopPiiEntitiesDetectionJobCommand";
import { StopSentimentDetectionJobCommandInput, StopSentimentDetectionJobCommandOutput } from "./commands/StopSentimentDetectionJobCommand";
import { StopTrainingDocumentClassifierCommandInput, StopTrainingDocumentClassifierCommandOutput } from "./commands/StopTrainingDocumentClassifierCommand";
import { StopTrainingEntityRecognizerCommandInput, StopTrainingEntityRecognizerCommandOutput } from "./commands/StopTrainingEntityRecognizerCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from "./commands/UpdateEndpointCommand";
import { ComprehendClient } from "./ComprehendClient";

export declare class Comprehend extends ComprehendClient {
    
    batchDetectDominantLanguage(args: BatchDetectDominantLanguageCommandInput, options?: __HttpHandlerOptions): Promise<BatchDetectDominantLanguageCommandOutput>;
    batchDetectDominantLanguage(args: BatchDetectDominantLanguageCommandInput, cb: (err: any, data?: BatchDetectDominantLanguageCommandOutput) => void): void;
    batchDetectDominantLanguage(args: BatchDetectDominantLanguageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDetectDominantLanguageCommandOutput) => void): void;
    
    batchDetectEntities(args: BatchDetectEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<BatchDetectEntitiesCommandOutput>;
    batchDetectEntities(args: BatchDetectEntitiesCommandInput, cb: (err: any, data?: BatchDetectEntitiesCommandOutput) => void): void;
    batchDetectEntities(args: BatchDetectEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDetectEntitiesCommandOutput) => void): void;
    
    batchDetectKeyPhrases(args: BatchDetectKeyPhrasesCommandInput, options?: __HttpHandlerOptions): Promise<BatchDetectKeyPhrasesCommandOutput>;
    batchDetectKeyPhrases(args: BatchDetectKeyPhrasesCommandInput, cb: (err: any, data?: BatchDetectKeyPhrasesCommandOutput) => void): void;
    batchDetectKeyPhrases(args: BatchDetectKeyPhrasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDetectKeyPhrasesCommandOutput) => void): void;
    
    batchDetectSentiment(args: BatchDetectSentimentCommandInput, options?: __HttpHandlerOptions): Promise<BatchDetectSentimentCommandOutput>;
    batchDetectSentiment(args: BatchDetectSentimentCommandInput, cb: (err: any, data?: BatchDetectSentimentCommandOutput) => void): void;
    batchDetectSentiment(args: BatchDetectSentimentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDetectSentimentCommandOutput) => void): void;
    
    batchDetectSyntax(args: BatchDetectSyntaxCommandInput, options?: __HttpHandlerOptions): Promise<BatchDetectSyntaxCommandOutput>;
    batchDetectSyntax(args: BatchDetectSyntaxCommandInput, cb: (err: any, data?: BatchDetectSyntaxCommandOutput) => void): void;
    batchDetectSyntax(args: BatchDetectSyntaxCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: BatchDetectSyntaxCommandOutput) => void): void;
    
    classifyDocument(args: ClassifyDocumentCommandInput, options?: __HttpHandlerOptions): Promise<ClassifyDocumentCommandOutput>;
    classifyDocument(args: ClassifyDocumentCommandInput, cb: (err: any, data?: ClassifyDocumentCommandOutput) => void): void;
    classifyDocument(args: ClassifyDocumentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ClassifyDocumentCommandOutput) => void): void;
    
    containsPiiEntities(args: ContainsPiiEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<ContainsPiiEntitiesCommandOutput>;
    containsPiiEntities(args: ContainsPiiEntitiesCommandInput, cb: (err: any, data?: ContainsPiiEntitiesCommandOutput) => void): void;
    containsPiiEntities(args: ContainsPiiEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ContainsPiiEntitiesCommandOutput) => void): void;
    
    createDocumentClassifier(args: CreateDocumentClassifierCommandInput, options?: __HttpHandlerOptions): Promise<CreateDocumentClassifierCommandOutput>;
    createDocumentClassifier(args: CreateDocumentClassifierCommandInput, cb: (err: any, data?: CreateDocumentClassifierCommandOutput) => void): void;
    createDocumentClassifier(args: CreateDocumentClassifierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateDocumentClassifierCommandOutput) => void): void;
    
    createEndpoint(args: CreateEndpointCommandInput, options?: __HttpHandlerOptions): Promise<CreateEndpointCommandOutput>;
    createEndpoint(args: CreateEndpointCommandInput, cb: (err: any, data?: CreateEndpointCommandOutput) => void): void;
    createEndpoint(args: CreateEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEndpointCommandOutput) => void): void;
    
    createEntityRecognizer(args: CreateEntityRecognizerCommandInput, options?: __HttpHandlerOptions): Promise<CreateEntityRecognizerCommandOutput>;
    createEntityRecognizer(args: CreateEntityRecognizerCommandInput, cb: (err: any, data?: CreateEntityRecognizerCommandOutput) => void): void;
    createEntityRecognizer(args: CreateEntityRecognizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateEntityRecognizerCommandOutput) => void): void;
    
    deleteDocumentClassifier(args: DeleteDocumentClassifierCommandInput, options?: __HttpHandlerOptions): Promise<DeleteDocumentClassifierCommandOutput>;
    deleteDocumentClassifier(args: DeleteDocumentClassifierCommandInput, cb: (err: any, data?: DeleteDocumentClassifierCommandOutput) => void): void;
    deleteDocumentClassifier(args: DeleteDocumentClassifierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteDocumentClassifierCommandOutput) => void): void;
    
    deleteEndpoint(args: DeleteEndpointCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEndpointCommandOutput>;
    deleteEndpoint(args: DeleteEndpointCommandInput, cb: (err: any, data?: DeleteEndpointCommandOutput) => void): void;
    deleteEndpoint(args: DeleteEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEndpointCommandOutput) => void): void;
    
    deleteEntityRecognizer(args: DeleteEntityRecognizerCommandInput, options?: __HttpHandlerOptions): Promise<DeleteEntityRecognizerCommandOutput>;
    deleteEntityRecognizer(args: DeleteEntityRecognizerCommandInput, cb: (err: any, data?: DeleteEntityRecognizerCommandOutput) => void): void;
    deleteEntityRecognizer(args: DeleteEntityRecognizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteEntityRecognizerCommandOutput) => void): void;
    
    describeDocumentClassificationJob(args: DescribeDocumentClassificationJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDocumentClassificationJobCommandOutput>;
    describeDocumentClassificationJob(args: DescribeDocumentClassificationJobCommandInput, cb: (err: any, data?: DescribeDocumentClassificationJobCommandOutput) => void): void;
    describeDocumentClassificationJob(args: DescribeDocumentClassificationJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDocumentClassificationJobCommandOutput) => void): void;
    
    describeDocumentClassifier(args: DescribeDocumentClassifierCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDocumentClassifierCommandOutput>;
    describeDocumentClassifier(args: DescribeDocumentClassifierCommandInput, cb: (err: any, data?: DescribeDocumentClassifierCommandOutput) => void): void;
    describeDocumentClassifier(args: DescribeDocumentClassifierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDocumentClassifierCommandOutput) => void): void;
    
    describeDominantLanguageDetectionJob(args: DescribeDominantLanguageDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeDominantLanguageDetectionJobCommandOutput>;
    describeDominantLanguageDetectionJob(args: DescribeDominantLanguageDetectionJobCommandInput, cb: (err: any, data?: DescribeDominantLanguageDetectionJobCommandOutput) => void): void;
    describeDominantLanguageDetectionJob(args: DescribeDominantLanguageDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeDominantLanguageDetectionJobCommandOutput) => void): void;
    
    describeEndpoint(args: DescribeEndpointCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEndpointCommandOutput>;
    describeEndpoint(args: DescribeEndpointCommandInput, cb: (err: any, data?: DescribeEndpointCommandOutput) => void): void;
    describeEndpoint(args: DescribeEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEndpointCommandOutput) => void): void;
    
    describeEntitiesDetectionJob(args: DescribeEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEntitiesDetectionJobCommandOutput>;
    describeEntitiesDetectionJob(args: DescribeEntitiesDetectionJobCommandInput, cb: (err: any, data?: DescribeEntitiesDetectionJobCommandOutput) => void): void;
    describeEntitiesDetectionJob(args: DescribeEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEntitiesDetectionJobCommandOutput) => void): void;
    
    describeEntityRecognizer(args: DescribeEntityRecognizerCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEntityRecognizerCommandOutput>;
    describeEntityRecognizer(args: DescribeEntityRecognizerCommandInput, cb: (err: any, data?: DescribeEntityRecognizerCommandOutput) => void): void;
    describeEntityRecognizer(args: DescribeEntityRecognizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEntityRecognizerCommandOutput) => void): void;
    
    describeEventsDetectionJob(args: DescribeEventsDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeEventsDetectionJobCommandOutput>;
    describeEventsDetectionJob(args: DescribeEventsDetectionJobCommandInput, cb: (err: any, data?: DescribeEventsDetectionJobCommandOutput) => void): void;
    describeEventsDetectionJob(args: DescribeEventsDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeEventsDetectionJobCommandOutput) => void): void;
    
    describeKeyPhrasesDetectionJob(args: DescribeKeyPhrasesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeKeyPhrasesDetectionJobCommandOutput>;
    describeKeyPhrasesDetectionJob(args: DescribeKeyPhrasesDetectionJobCommandInput, cb: (err: any, data?: DescribeKeyPhrasesDetectionJobCommandOutput) => void): void;
    describeKeyPhrasesDetectionJob(args: DescribeKeyPhrasesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeKeyPhrasesDetectionJobCommandOutput) => void): void;
    
    describePiiEntitiesDetectionJob(args: DescribePiiEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribePiiEntitiesDetectionJobCommandOutput>;
    describePiiEntitiesDetectionJob(args: DescribePiiEntitiesDetectionJobCommandInput, cb: (err: any, data?: DescribePiiEntitiesDetectionJobCommandOutput) => void): void;
    describePiiEntitiesDetectionJob(args: DescribePiiEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribePiiEntitiesDetectionJobCommandOutput) => void): void;
    
    describeSentimentDetectionJob(args: DescribeSentimentDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeSentimentDetectionJobCommandOutput>;
    describeSentimentDetectionJob(args: DescribeSentimentDetectionJobCommandInput, cb: (err: any, data?: DescribeSentimentDetectionJobCommandOutput) => void): void;
    describeSentimentDetectionJob(args: DescribeSentimentDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeSentimentDetectionJobCommandOutput) => void): void;
    
    describeTopicsDetectionJob(args: DescribeTopicsDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<DescribeTopicsDetectionJobCommandOutput>;
    describeTopicsDetectionJob(args: DescribeTopicsDetectionJobCommandInput, cb: (err: any, data?: DescribeTopicsDetectionJobCommandOutput) => void): void;
    describeTopicsDetectionJob(args: DescribeTopicsDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DescribeTopicsDetectionJobCommandOutput) => void): void;
    
    detectDominantLanguage(args: DetectDominantLanguageCommandInput, options?: __HttpHandlerOptions): Promise<DetectDominantLanguageCommandOutput>;
    detectDominantLanguage(args: DetectDominantLanguageCommandInput, cb: (err: any, data?: DetectDominantLanguageCommandOutput) => void): void;
    detectDominantLanguage(args: DetectDominantLanguageCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectDominantLanguageCommandOutput) => void): void;
    
    detectEntities(args: DetectEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<DetectEntitiesCommandOutput>;
    detectEntities(args: DetectEntitiesCommandInput, cb: (err: any, data?: DetectEntitiesCommandOutput) => void): void;
    detectEntities(args: DetectEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectEntitiesCommandOutput) => void): void;
    
    detectKeyPhrases(args: DetectKeyPhrasesCommandInput, options?: __HttpHandlerOptions): Promise<DetectKeyPhrasesCommandOutput>;
    detectKeyPhrases(args: DetectKeyPhrasesCommandInput, cb: (err: any, data?: DetectKeyPhrasesCommandOutput) => void): void;
    detectKeyPhrases(args: DetectKeyPhrasesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectKeyPhrasesCommandOutput) => void): void;
    
    detectPiiEntities(args: DetectPiiEntitiesCommandInput, options?: __HttpHandlerOptions): Promise<DetectPiiEntitiesCommandOutput>;
    detectPiiEntities(args: DetectPiiEntitiesCommandInput, cb: (err: any, data?: DetectPiiEntitiesCommandOutput) => void): void;
    detectPiiEntities(args: DetectPiiEntitiesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectPiiEntitiesCommandOutput) => void): void;
    
    detectSentiment(args: DetectSentimentCommandInput, options?: __HttpHandlerOptions): Promise<DetectSentimentCommandOutput>;
    detectSentiment(args: DetectSentimentCommandInput, cb: (err: any, data?: DetectSentimentCommandOutput) => void): void;
    detectSentiment(args: DetectSentimentCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectSentimentCommandOutput) => void): void;
    
    detectSyntax(args: DetectSyntaxCommandInput, options?: __HttpHandlerOptions): Promise<DetectSyntaxCommandOutput>;
    detectSyntax(args: DetectSyntaxCommandInput, cb: (err: any, data?: DetectSyntaxCommandOutput) => void): void;
    detectSyntax(args: DetectSyntaxCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DetectSyntaxCommandOutput) => void): void;
    
    listDocumentClassificationJobs(args: ListDocumentClassificationJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListDocumentClassificationJobsCommandOutput>;
    listDocumentClassificationJobs(args: ListDocumentClassificationJobsCommandInput, cb: (err: any, data?: ListDocumentClassificationJobsCommandOutput) => void): void;
    listDocumentClassificationJobs(args: ListDocumentClassificationJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDocumentClassificationJobsCommandOutput) => void): void;
    
    listDocumentClassifiers(args: ListDocumentClassifiersCommandInput, options?: __HttpHandlerOptions): Promise<ListDocumentClassifiersCommandOutput>;
    listDocumentClassifiers(args: ListDocumentClassifiersCommandInput, cb: (err: any, data?: ListDocumentClassifiersCommandOutput) => void): void;
    listDocumentClassifiers(args: ListDocumentClassifiersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDocumentClassifiersCommandOutput) => void): void;
    
    listDocumentClassifierSummaries(args: ListDocumentClassifierSummariesCommandInput, options?: __HttpHandlerOptions): Promise<ListDocumentClassifierSummariesCommandOutput>;
    listDocumentClassifierSummaries(args: ListDocumentClassifierSummariesCommandInput, cb: (err: any, data?: ListDocumentClassifierSummariesCommandOutput) => void): void;
    listDocumentClassifierSummaries(args: ListDocumentClassifierSummariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDocumentClassifierSummariesCommandOutput) => void): void;
    
    listDominantLanguageDetectionJobs(args: ListDominantLanguageDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListDominantLanguageDetectionJobsCommandOutput>;
    listDominantLanguageDetectionJobs(args: ListDominantLanguageDetectionJobsCommandInput, cb: (err: any, data?: ListDominantLanguageDetectionJobsCommandOutput) => void): void;
    listDominantLanguageDetectionJobs(args: ListDominantLanguageDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListDominantLanguageDetectionJobsCommandOutput) => void): void;
    
    listEndpoints(args: ListEndpointsCommandInput, options?: __HttpHandlerOptions): Promise<ListEndpointsCommandOutput>;
    listEndpoints(args: ListEndpointsCommandInput, cb: (err: any, data?: ListEndpointsCommandOutput) => void): void;
    listEndpoints(args: ListEndpointsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEndpointsCommandOutput) => void): void;
    
    listEntitiesDetectionJobs(args: ListEntitiesDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListEntitiesDetectionJobsCommandOutput>;
    listEntitiesDetectionJobs(args: ListEntitiesDetectionJobsCommandInput, cb: (err: any, data?: ListEntitiesDetectionJobsCommandOutput) => void): void;
    listEntitiesDetectionJobs(args: ListEntitiesDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEntitiesDetectionJobsCommandOutput) => void): void;
    
    listEntityRecognizers(args: ListEntityRecognizersCommandInput, options?: __HttpHandlerOptions): Promise<ListEntityRecognizersCommandOutput>;
    listEntityRecognizers(args: ListEntityRecognizersCommandInput, cb: (err: any, data?: ListEntityRecognizersCommandOutput) => void): void;
    listEntityRecognizers(args: ListEntityRecognizersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEntityRecognizersCommandOutput) => void): void;
    
    listEntityRecognizerSummaries(args: ListEntityRecognizerSummariesCommandInput, options?: __HttpHandlerOptions): Promise<ListEntityRecognizerSummariesCommandOutput>;
    listEntityRecognizerSummaries(args: ListEntityRecognizerSummariesCommandInput, cb: (err: any, data?: ListEntityRecognizerSummariesCommandOutput) => void): void;
    listEntityRecognizerSummaries(args: ListEntityRecognizerSummariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEntityRecognizerSummariesCommandOutput) => void): void;
    
    listEventsDetectionJobs(args: ListEventsDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListEventsDetectionJobsCommandOutput>;
    listEventsDetectionJobs(args: ListEventsDetectionJobsCommandInput, cb: (err: any, data?: ListEventsDetectionJobsCommandOutput) => void): void;
    listEventsDetectionJobs(args: ListEventsDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListEventsDetectionJobsCommandOutput) => void): void;
    
    listKeyPhrasesDetectionJobs(args: ListKeyPhrasesDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListKeyPhrasesDetectionJobsCommandOutput>;
    listKeyPhrasesDetectionJobs(args: ListKeyPhrasesDetectionJobsCommandInput, cb: (err: any, data?: ListKeyPhrasesDetectionJobsCommandOutput) => void): void;
    listKeyPhrasesDetectionJobs(args: ListKeyPhrasesDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListKeyPhrasesDetectionJobsCommandOutput) => void): void;
    
    listPiiEntitiesDetectionJobs(args: ListPiiEntitiesDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListPiiEntitiesDetectionJobsCommandOutput>;
    listPiiEntitiesDetectionJobs(args: ListPiiEntitiesDetectionJobsCommandInput, cb: (err: any, data?: ListPiiEntitiesDetectionJobsCommandOutput) => void): void;
    listPiiEntitiesDetectionJobs(args: ListPiiEntitiesDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListPiiEntitiesDetectionJobsCommandOutput) => void): void;
    
    listSentimentDetectionJobs(args: ListSentimentDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListSentimentDetectionJobsCommandOutput>;
    listSentimentDetectionJobs(args: ListSentimentDetectionJobsCommandInput, cb: (err: any, data?: ListSentimentDetectionJobsCommandOutput) => void): void;
    listSentimentDetectionJobs(args: ListSentimentDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListSentimentDetectionJobsCommandOutput) => void): void;
    
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    
    listTopicsDetectionJobs(args: ListTopicsDetectionJobsCommandInput, options?: __HttpHandlerOptions): Promise<ListTopicsDetectionJobsCommandOutput>;
    listTopicsDetectionJobs(args: ListTopicsDetectionJobsCommandInput, cb: (err: any, data?: ListTopicsDetectionJobsCommandOutput) => void): void;
    listTopicsDetectionJobs(args: ListTopicsDetectionJobsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTopicsDetectionJobsCommandOutput) => void): void;
    
    startDocumentClassificationJob(args: StartDocumentClassificationJobCommandInput, options?: __HttpHandlerOptions): Promise<StartDocumentClassificationJobCommandOutput>;
    startDocumentClassificationJob(args: StartDocumentClassificationJobCommandInput, cb: (err: any, data?: StartDocumentClassificationJobCommandOutput) => void): void;
    startDocumentClassificationJob(args: StartDocumentClassificationJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartDocumentClassificationJobCommandOutput) => void): void;
    
    startDominantLanguageDetectionJob(args: StartDominantLanguageDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartDominantLanguageDetectionJobCommandOutput>;
    startDominantLanguageDetectionJob(args: StartDominantLanguageDetectionJobCommandInput, cb: (err: any, data?: StartDominantLanguageDetectionJobCommandOutput) => void): void;
    startDominantLanguageDetectionJob(args: StartDominantLanguageDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartDominantLanguageDetectionJobCommandOutput) => void): void;
    
    startEntitiesDetectionJob(args: StartEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartEntitiesDetectionJobCommandOutput>;
    startEntitiesDetectionJob(args: StartEntitiesDetectionJobCommandInput, cb: (err: any, data?: StartEntitiesDetectionJobCommandOutput) => void): void;
    startEntitiesDetectionJob(args: StartEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartEntitiesDetectionJobCommandOutput) => void): void;
    
    startEventsDetectionJob(args: StartEventsDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartEventsDetectionJobCommandOutput>;
    startEventsDetectionJob(args: StartEventsDetectionJobCommandInput, cb: (err: any, data?: StartEventsDetectionJobCommandOutput) => void): void;
    startEventsDetectionJob(args: StartEventsDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartEventsDetectionJobCommandOutput) => void): void;
    
    startKeyPhrasesDetectionJob(args: StartKeyPhrasesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartKeyPhrasesDetectionJobCommandOutput>;
    startKeyPhrasesDetectionJob(args: StartKeyPhrasesDetectionJobCommandInput, cb: (err: any, data?: StartKeyPhrasesDetectionJobCommandOutput) => void): void;
    startKeyPhrasesDetectionJob(args: StartKeyPhrasesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartKeyPhrasesDetectionJobCommandOutput) => void): void;
    
    startPiiEntitiesDetectionJob(args: StartPiiEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartPiiEntitiesDetectionJobCommandOutput>;
    startPiiEntitiesDetectionJob(args: StartPiiEntitiesDetectionJobCommandInput, cb: (err: any, data?: StartPiiEntitiesDetectionJobCommandOutput) => void): void;
    startPiiEntitiesDetectionJob(args: StartPiiEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartPiiEntitiesDetectionJobCommandOutput) => void): void;
    
    startSentimentDetectionJob(args: StartSentimentDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartSentimentDetectionJobCommandOutput>;
    startSentimentDetectionJob(args: StartSentimentDetectionJobCommandInput, cb: (err: any, data?: StartSentimentDetectionJobCommandOutput) => void): void;
    startSentimentDetectionJob(args: StartSentimentDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartSentimentDetectionJobCommandOutput) => void): void;
    
    startTopicsDetectionJob(args: StartTopicsDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StartTopicsDetectionJobCommandOutput>;
    startTopicsDetectionJob(args: StartTopicsDetectionJobCommandInput, cb: (err: any, data?: StartTopicsDetectionJobCommandOutput) => void): void;
    startTopicsDetectionJob(args: StartTopicsDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StartTopicsDetectionJobCommandOutput) => void): void;
    
    stopDominantLanguageDetectionJob(args: StopDominantLanguageDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopDominantLanguageDetectionJobCommandOutput>;
    stopDominantLanguageDetectionJob(args: StopDominantLanguageDetectionJobCommandInput, cb: (err: any, data?: StopDominantLanguageDetectionJobCommandOutput) => void): void;
    stopDominantLanguageDetectionJob(args: StopDominantLanguageDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopDominantLanguageDetectionJobCommandOutput) => void): void;
    
    stopEntitiesDetectionJob(args: StopEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopEntitiesDetectionJobCommandOutput>;
    stopEntitiesDetectionJob(args: StopEntitiesDetectionJobCommandInput, cb: (err: any, data?: StopEntitiesDetectionJobCommandOutput) => void): void;
    stopEntitiesDetectionJob(args: StopEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopEntitiesDetectionJobCommandOutput) => void): void;
    
    stopEventsDetectionJob(args: StopEventsDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopEventsDetectionJobCommandOutput>;
    stopEventsDetectionJob(args: StopEventsDetectionJobCommandInput, cb: (err: any, data?: StopEventsDetectionJobCommandOutput) => void): void;
    stopEventsDetectionJob(args: StopEventsDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopEventsDetectionJobCommandOutput) => void): void;
    
    stopKeyPhrasesDetectionJob(args: StopKeyPhrasesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopKeyPhrasesDetectionJobCommandOutput>;
    stopKeyPhrasesDetectionJob(args: StopKeyPhrasesDetectionJobCommandInput, cb: (err: any, data?: StopKeyPhrasesDetectionJobCommandOutput) => void): void;
    stopKeyPhrasesDetectionJob(args: StopKeyPhrasesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopKeyPhrasesDetectionJobCommandOutput) => void): void;
    
    stopPiiEntitiesDetectionJob(args: StopPiiEntitiesDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopPiiEntitiesDetectionJobCommandOutput>;
    stopPiiEntitiesDetectionJob(args: StopPiiEntitiesDetectionJobCommandInput, cb: (err: any, data?: StopPiiEntitiesDetectionJobCommandOutput) => void): void;
    stopPiiEntitiesDetectionJob(args: StopPiiEntitiesDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopPiiEntitiesDetectionJobCommandOutput) => void): void;
    
    stopSentimentDetectionJob(args: StopSentimentDetectionJobCommandInput, options?: __HttpHandlerOptions): Promise<StopSentimentDetectionJobCommandOutput>;
    stopSentimentDetectionJob(args: StopSentimentDetectionJobCommandInput, cb: (err: any, data?: StopSentimentDetectionJobCommandOutput) => void): void;
    stopSentimentDetectionJob(args: StopSentimentDetectionJobCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopSentimentDetectionJobCommandOutput) => void): void;
    
    stopTrainingDocumentClassifier(args: StopTrainingDocumentClassifierCommandInput, options?: __HttpHandlerOptions): Promise<StopTrainingDocumentClassifierCommandOutput>;
    stopTrainingDocumentClassifier(args: StopTrainingDocumentClassifierCommandInput, cb: (err: any, data?: StopTrainingDocumentClassifierCommandOutput) => void): void;
    stopTrainingDocumentClassifier(args: StopTrainingDocumentClassifierCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopTrainingDocumentClassifierCommandOutput) => void): void;
    
    stopTrainingEntityRecognizer(args: StopTrainingEntityRecognizerCommandInput, options?: __HttpHandlerOptions): Promise<StopTrainingEntityRecognizerCommandOutput>;
    stopTrainingEntityRecognizer(args: StopTrainingEntityRecognizerCommandInput, cb: (err: any, data?: StopTrainingEntityRecognizerCommandOutput) => void): void;
    stopTrainingEntityRecognizer(args: StopTrainingEntityRecognizerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: StopTrainingEntityRecognizerCommandOutput) => void): void;
    
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    
    updateEndpoint(args: UpdateEndpointCommandInput, options?: __HttpHandlerOptions): Promise<UpdateEndpointCommandOutput>;
    updateEndpoint(args: UpdateEndpointCommandInput, cb: (err: any, data?: UpdateEndpointCommandOutput) => void): void;
    updateEndpoint(args: UpdateEndpointCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateEndpointCommandOutput) => void): void;
}
